name: CI/CD Docker Build

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Cho phép chạy thủ công từ GitHub Actions

env:
  NODE_VERSION: '18'

jobs:
  # 1️⃣ Kiểm tra và test code trước khi build Docker
  test:
    name: Test Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth, product, order, api-gateway]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ matrix.service }}/package-lock.json'

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm ci

      - name: Run linting
        run: |
          cd ${{ matrix.service }}
          npm run lint || echo "No lint script found"

      - name: Run tests
        run: |
          cd ${{ matrix.service }}
          npm test || echo "No test script found"


  # 2️⃣ Build & Push Docker image lên Docker Hub (KHÔNG DEPLOY)
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [auth, product, order, api-gateway]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/eproject-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT || 22 }}
          script: |
            # Chuyển vào thư mục project
            cd /path/to/production/eproject
            
            # Pull code mới nhất
            git pull origin main
            
            # Dừng container cũ
            docker-compose down
            
            # Pull image mới từ Docker Hub
            docker-compose pull
            
            # Khởi động lại với image mới
            docker-compose up -d
            
            # Kiểm tra trạng thái container
            docker-compose ps
            
            # Dọn dẹp image cũ
            docker system prune -f
            
            echo "✅ Deploy completed successfully!"
